{"version":3,"file":"index.js","sources":["../src/utils/asyncPopulate.js","../src/Factory.js","../src/generators/Generator.js","../src/generators/Sequence.js","../src/generators/ModelGenerator.js","../src/generators/Assoc.js","../src/generators/Build.js","../src/generators/AssocMany.js","../src/generators/BuildMany.js","../src/generators/attrGenerator.js","../src/adapters/DefaultAdapter.js","../src/FactoryGirl.js","../src/index.js"],"sourcesContent":["/**\n * Created by chetanv on 07/06/16.\n */\n\nasync function asyncPopulate(target, source) {\n  Object.keys(source).forEach(async(attr) => {\n    if (Array.isArray(source[attr])) {\n      target[attr] = [];\n      await asyncPopulate(target[attr], source[attr]);\n    } else if (typeof source[attr] === 'object') {\n      target[attr] = target[attr] || {};\n      await asyncPopulate(target[attr], source[attr]);\n    } else if (typeof source[attr] === 'function') {\n      target[attr] = await Promise.resolve(source[attr]());\n    } else {\n      target[attr] = await Promise.resolve(source[attr]);\n    }\n  });\n\n  return target;\n}\n\nexport default asyncPopulate;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport asyncPopulate from './utils/asyncPopulate';\nimport Debug from 'debug';\n\nconst debug = Debug('Factory');\n\nclass Factory {\n  name = null;\n  Model = null;\n  initializer = null;\n  options = null;\n\n  constructor(Model, initializer, options = {}) {\n    if (!Model || typeof Model !== 'function') {\n      throw new Error('Invalid Model passed to the factory');\n    }\n\n    if (!initializer || (typeof initializer !== 'object' && typeof initializer !== 'function')) {\n      throw new Error('Invalid initializer passed to the factory');\n    }\n\n    this.Model = Model;\n    this.initializer = initializer;\n    this.options = options;\n  }\n\n  async getFactoryAttrs(buildOptions = {}) {\n    let attrs = {};\n    if (typeof this.initializer === 'function') {\n      attrs = await Promise.resolve(this.initializer(buildOptions));\n    } else {\n      attrs = {...this.initializer};\n    }\n\n    return attrs;\n  }\n\n  async attrs(attrs = {}, buildOptions = {}) {\n    const factoryAttrs = await this.getFactoryAttrs(buildOptions);\n    const modelAttrs = {};\n\n    await asyncPopulate(modelAttrs, factoryAttrs);\n    await asyncPopulate(modelAttrs, attrs);\n\n    return modelAttrs;\n  }\n\n  async build(adapter, attrs = {}, buildOptions = {}) {\n    const modelAttrs = await this.attrs(attrs, buildOptions);\n    return adapter.build(this.Model, modelAttrs);\n  }\n\n  async create(adapter, attrs = {}, buildOptions = {}) {\n    const model = await this.build(adapter, attrs, buildOptions);\n    return adapter.save(this.Model, model);\n  }\n\n  async attrsMany(num, attrsArray = [], buildOptionsArray = []) {\n\n    const models = [];\n    let attrObject = null;\n    let buildOptionsObject = null;\n\n    if (!Array.isArray(attrsArray) && typeof attrsArray === 'object') {\n      attrObject = attrsArray;\n      attrsArray = [];\n    }\n\n    if (!Array.isArray(buildOptionsArray) && typeof buildOptionsArray === 'object') {\n      buildOptionsObject = buildOptionsArray;\n      buildOptionsArray = [];\n    }\n\n    if (typeof num !== 'number' || num < 1) {\n      throw new Error('Invalid number of objects requested');\n    }\n\n    if (!Array.isArray(attrsArray)) {\n      throw new Error('Invalid attrsArray passed');\n    }\n\n    if (!Array.isArray(buildOptionsArray)) {\n      throw new Error('Invalid buildOptionsArray passed');\n    }\n\n    attrsArray.length = buildOptionsArray.length = num;\n    for (let i = 0; i < num; i++) {\n      models[i] = this.attrs(\n        attrObject || attrsArray[i] || {},\n        buildOptionsObject || buildOptionsArray[i] || {}\n      );\n    }\n\n    return Promise.all(models);\n  }\n\n  async buildMany(adapter, num, attrsArray = [], buildOptionsArray = []) {\n    const attrs = await this.attrsMany(num, attrsArray, buildOptionsArray);\n    const models = attrs.map((attr) => adapter.build(this.Model, attr));\n    return Promise.all(models);\n  }\n\n  async createMany(adapter, num, attrsArray = [], buildOptionsArray = []) {\n    const models = await this.buildMany(adapter, num, attrsArray, buildOptionsArray);\n    const savedModels = models.map((model) => adapter.save(this.Model, model));\n    return Promise.all(savedModels);\n  }\n}\n\nexport default Factory;","/**\n * Created by chetanv on 01/06/16.\n */\n\nclass Generator {\n  constructor(factoryGirl) {\n    if (!factoryGirl) {\n      throw new Error('No FactoryGirl instance passed.');\n    }\n    this.factoryGirl = factoryGirl;\n  }\n\n  generate() {\n    throw new Error('Override this method to generate a value');\n  }\n}\n\nexport default Generator;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport Generator from './Generator';\n\nclass Sequence extends Generator {\n  static sequences = {};\n  id = '';\n\n  constructor(factoryGirl, id, callback = null) {\n    super(factoryGirl);\n\n    if (typeof id !== 'string') {\n      throw new Error('Invalid sequence key passed');\n    }\n\n    this.id = id;\n\n    Sequence.sequences[id] = Sequence.sequences[id] || 1;\n    this.callback = callback;\n  }\n\n  async generate() {\n    const count = Sequence.sequences[this.id]++;\n    return this.callback ? this.callback(count) : count;\n  }\n}\n\nexport default Sequence;","/**\n * Created by chetanv on 06/06/16.\n */\n\nimport Generator from './Generator';\n\nclass ModelGenerator extends Generator {\n  constructor(factoryGirl, name, key = null, attrs = {}, buildOptions = {}) {\n    super(factoryGirl);\n\n    if (typeof name !== 'string' || name.length < 1) {\n      throw new Error('Invalid model name passed');\n    }\n\n    this.name = name;\n    this.key = key;\n    this.attrs = attrs;\n    this.buildOptions = buildOptions;\n  }\n}\n\nexport default ModelGenerator;\n","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass Assoc extends ModelGenerator {\n  async generate() {\n    const model = await this.factoryGirl.create(this.name, this.attrs, this.buildOptions);\n    return this.key ? model[this.key] : model;\n  }\n}\n\nexport default Assoc;\n","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass Build extends ModelGenerator {\n  async generate() {\n    const model = await this.factoryGirl.build(this.name, this.attrs, this.buildOptions);\n    return this.key ? model[this.key] : model;\n  }\n}\n\nexport default Build;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass AssocMany extends ModelGenerator {\n  constructor(factoryGirl, name, num, key = null, attrs = {}, buildOptions = {}) {\n    super(factoryGirl, name, key, attrs, buildOptions);\n\n    if (typeof num !== 'number' || num < 1) {\n      throw new Error('Invalid number of items requested.');\n    }\n\n    this.num = num;\n  }\n\n  async generate() {\n    const models = await this.factoryGirl.createMany(this.name, this.num, this.attrs, this.buildOptions);\n    return this.key ? models.map(model => model[this.key]) : models;\n  }\n}\n\nexport default AssocMany;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass BuildMany extends ModelGenerator {\n  constructor(factoryGirl, name, num, key = null, attrs = {}, buildOptions = {}) {\n    super(factoryGirl, name, key, attrs, buildOptions);\n\n    if (typeof num !== 'number' || num < 1) {\n      throw new Error('Invalid number of items requested.');\n    }\n\n    this.num = num;\n  }\n\n  async generate() {\n    const models = await this.factoryGirl.buildMany(this.name, this.num, this.attrs, this.buildOptions);\n    return this.key ? models.map(model => model[this.key]) : models;\n  }\n}\n\nexport default BuildMany;","/**\n * Created by chetanv on 01/06/16.\n */\n\nexport default function (factoryGirl, SomeGenerator) {\n  return function () {\n    const generator = new SomeGenerator(factoryGirl, ...arguments);\n    return async function () {\n      return generator.generate();\n    }\n  }\n}","/**\n * Created by chetanv on 01/06/16.\n */\n\n\nclass DefaultAdapter {\n  async build(Model, props) {\n    return new Model(props);\n  }\n\n  async save(Model, model) {\n    model.save();\n    return model;\n  }\n  \n  async destroy(Model, model) {\n    model.destroy();\n    return model;\n  }\n}\n\nexport default DefaultAdapter;\n","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport Factory from './Factory';\nimport Sequence from './generators/Sequence';\nimport Assoc from './generators/Assoc';\nimport Build from './generators/Build';\nimport AssocMany from './generators/AssocMany';\nimport BuildMany from './generators/BuildMany';\nimport attrGenerator from './generators/attrGenerator';\nimport DefaultAdapter from './adapters/DefaultAdapter';\n\nclass FactoryGirl {\n  factories = {};\n  options = {};\n  adapters = {};\n\n  constructor(options) {\n    this.assoc = attrGenerator(this, Assoc);\n    this.assocMany = attrGenerator(this, AssocMany);\n    this.assocBuild = attrGenerator(this, Build);\n    this.assocBuildMany = attrGenerator(this, BuildMany);\n    this.sequence = attrGenerator(this, Sequence);\n\n    this.defaultAdapter = options.defaultAdapter || new DefaultAdapter;\n  }\n\n  define(name, Model, initializer, options) {\n    if (this.getFactory(name)) {\n      throw new Error(`factory ${name} already defined`)\n    }\n\n    this.factories[name] = new Factory(Model, initializer, options);\n  }\n\n  async attrs(name, attrs, buildOptions) {\n    return await this.getFactory(name).attrs(attrs, buildOptions);\n  }\n\n  async build(name, attrs, buildOptions) {\n    const adapter = this.adapters[name] || this.defaultAdapter;\n    return await this.getFactory(name).build(adapter, attrs, buildOptions);\n  }\n\n  async create(name, attrs, buildOptions) {\n    const adapter = this.adapters[name] || this.defaultAdapter;\n    return await this.getFactory(name).create(adapter, attrs, buildOptions);\n  }\n\n  async buildMany(name, num, attrs, buildOptions) {\n    const adapter = this.adapters[name] || this.defaultAdapter;\n    return await this.getFactory(name).buildMany(adapter, num, attrs, buildOptions);\n  }\n\n  async createMany(name, num, attrs, buildOptions) {\n    const adapter = this.adapters[name] || this.defaultAdapter;\n    return await this.getFactory(name).createMany(adapter, num, attrs, buildOptions);\n  }\n\n  getFactory(name) {\n    return this.factories[name];\n  }\n\n  withOptions(options, merge = false) {\n    this.options = merge ? {...this.options, ...options} : options;\n  }\n\n  setAdapter(adapter, factory) {\n    if (!factory) {\n      this.defaultAdapter = adapter;\n    } else {\n      this.adapters[factory] = adapter;\n    }\n  }\n}\n\nexport default FactoryGirl;","/**\n * Created by chetanv on 07/06/16.\n */\n\nimport FactoryGirl from './FactoryGirl';\n\nconst factory = new FactoryGirl();\n\nexport default factory;"],"names":[],"mappings":"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"}