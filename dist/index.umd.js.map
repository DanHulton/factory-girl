{"version":3,"file":"index.umd.js","sources":["../src/utils/asyncPopulate.js","../src/Factory.js","../src/generators/Generator.js","../src/generators/Sequence.js","../src/generators/ModelGenerator.js","../src/generators/Assoc.js","../src/generators/AssocAttrs.js","../src/generators/Build.js","../src/generators/ManyModelGenerator.js","../src/generators/AssocMany.js","../src/generators/AssocAttrsMany.js","../src/generators/BuildMany.js","../src/generators/ChanceGenerator.js","../src/generators/attrGenerator.js","../src/adapters/DefaultAdapter.js","../src/FactoryGirl.js","../src/index.js"],"sourcesContent":["/**\n * Created by chetanv on 07/06/16.\n */\n\nimport Debug from 'debug';\n\nconst debug = Debug('asyncPopulate');\n\nfunction asyncPopulate(target, source) {\n  if(typeof target !== 'object') {\n    return Promise.reject(new Error('Invalid target passed'));\n  }\n\n  if(typeof source !== 'object') {\n    return Promise.reject(new Error('Invalid source passed'));\n  }\n\n  const promises = [];\n  Object.keys(source).forEach((attr) => {\n    if (Array.isArray(source[attr])) {\n      target[attr] = [];\n      promises.push(asyncPopulate(target[attr], source[attr]));\n    } else if (typeof source[attr] === 'object') {\n      target[attr] = target[attr] || {};\n      promises.push(asyncPopulate(target[attr], source[attr]));\n    } else if (typeof source[attr] === 'function') {\n      promises.push(Promise.resolve(source[attr]()).then(function(v) { target[attr] = v; }));\n    } else {\n      promises.push(Promise.resolve(source[attr]).then(function(v) { target[attr] = v; }));\n    }\n  });\n\n  return Promise.all(promises)\n}\n\nexport default asyncPopulate;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport asyncPopulate from './utils/asyncPopulate';\nimport Debug from 'debug';\n\nconst debug = Debug('Factory');\n\nclass Factory {\n  name = null;\n  Model = null;\n  initializer = null;\n  options = null;\n\n  constructor(Model, initializer, options = {}) {\n    if (!Model || typeof Model !== 'function') {\n      throw new Error('Invalid Model passed to the factory');\n    }\n\n    if (!initializer || (typeof initializer !== 'object' && typeof initializer !== 'function')) {\n      throw new Error('Invalid initializer passed to the factory');\n    }\n\n    this.Model = Model;\n    this.initializer = initializer;\n    this.options = options;\n  }\n\n  getFactoryAttrs(buildOptions = {}) {\n    let attrs = {};\n    if (typeof this.initializer === 'function') {\n      attrs = this.initializer(buildOptions);\n    } else {\n      attrs = {...this.initializer};\n    }\n\n    return Promise.resolve(attrs);\n  }\n\n  async attrs(attrs = {}, buildOptions = {}) {\n    const factoryAttrs = await this.getFactoryAttrs(buildOptions);\n    const modelAttrs = {};\n\n    await asyncPopulate(modelAttrs, factoryAttrs);\n    await asyncPopulate(modelAttrs, attrs);\n\n    return modelAttrs;\n  }\n\n  async build(adapter, attrs = {}, buildOptions = {}) {\n    const modelAttrs = await this.attrs(attrs, buildOptions);\n    return adapter.build(this.Model, modelAttrs);\n  }\n\n  async create(adapter, attrs = {}, buildOptions = {}) {\n    const model = await this.build(adapter, attrs, buildOptions);\n    return adapter.save(this.Model, model);\n  }\n\n  attrsMany(num, attrsArray = [], buildOptionsArray = []) {\n    const models = [];\n    let attrObject = null;\n    let buildOptionsObject = null;\n\n    if (typeof attrsArray === 'object' && !Array.isArray(attrsArray)) {\n      attrObject = attrsArray;\n      attrsArray = [];\n    }\n\n    if (!Array.isArray(buildOptionsArray) && typeof buildOptionsArray === 'object') {\n      buildOptionsObject = buildOptionsArray;\n      buildOptionsArray = [];\n    }\n\n    if (typeof num !== 'number' || num < 1) {\n      return Promise.reject(new Error('Invalid number of objects requested'));\n    }\n\n    if (!Array.isArray(attrsArray)) {\n      return Promise.reject(new Error('Invalid attrsArray passed'));\n    }\n\n    if (!Array.isArray(buildOptionsArray)) {\n      return Promise.reject(new Error('Invalid buildOptionsArray passed'));\n    }\n\n    attrsArray.length = buildOptionsArray.length = num;\n    for (let i = 0; i < num; i++) {\n      models[i] = this.attrs(\n        attrObject || attrsArray[i] || {},\n        buildOptionsObject || buildOptionsArray[i] || {}\n      );\n    }\n\n    return Promise.all(models);\n  }\n\n  async buildMany(adapter, num, attrsArray = [], buildOptionsArray = []) {\n    const attrs = await this.attrsMany(num, attrsArray, buildOptionsArray);\n    const models = attrs.map((attr) => adapter.build(this.Model, attr));\n    return Promise.all(models);\n  }\n\n  async createMany(adapter, num, attrsArray = [], buildOptionsArray = []) {\n    const models = await this.buildMany(adapter, num, attrsArray, buildOptionsArray);\n    const savedModels = models.map((model) => adapter.save(this.Model, model));\n    return Promise.all(savedModels);\n  }\n}\n\nexport default Factory;","/**\n * Created by chetanv on 01/06/16.\n */\n\nclass Generator {\n  constructor(factoryGirl) {\n    if (!factoryGirl) {\n      throw new Error('No FactoryGirl instance passed.');\n    }\n    this.factoryGirl = factoryGirl;\n  }\n\n  generate() {\n    throw new Error('Override this method to generate a value');\n  }\n}\n\nexport default Generator;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport Generator from './Generator';\n\nclass Sequence extends Generator {\n  static sequences = {};\n  id = '';\n\n  constructor(factoryGirl, id, callback = null) {\n    super(factoryGirl);\n\n    if (typeof id !== 'string') {\n      throw new Error('Invalid sequence key passed');\n    }\n\n    this.id = id;\n\n    Sequence.sequences[id] = Sequence.sequences[id] || 1;\n    this.callback = callback;\n  }\n\n  generate() {\n    const count = Sequence.sequences[this.id]++;\n    return Promise.resolve(this.callback ? this.callback(count) : count);\n  }\n}\n\nexport default Sequence;","/**\n * Created by chetanv on 06/06/16.\n */\n\nimport Generator from './Generator';\n\nclass ModelGenerator extends Generator {\n  constructor(factoryGirl, name, key = null, attrs = {}, buildOptions = {}) {\n    super(factoryGirl);\n\n    if (typeof name !== 'string' || name.length < 1) {\n      throw new Error('Invalid model name passed');\n    }\n\n    this.name = name;\n    this.key = key;\n    this.attrs = attrs;\n    this.buildOptions = buildOptions;\n  }\n}\n\nexport default ModelGenerator;\n","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass Assoc extends ModelGenerator {\n  async generate() {\n    const model = await this.factoryGirl.create(this.name, this.attrs, this.buildOptions);\n    return this.key ? model[this.key] : model;\n  }\n}\n\nexport default Assoc;\n","/**\n * Created by chetanv on 08/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass AssocAttrs extends ModelGenerator {\n  async generate() {\n    const model = await this.factoryGirl.attrs(this.name, this.attrs, this.buildOptions);\n    return this.key ? model[this.key] : model;\n  }\n}\n\nexport default AssocAttrs;\n","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass Build extends ModelGenerator {\n  async generate() {\n    const model = await this.factoryGirl.build(this.name, this.attrs, this.buildOptions);\n    return this.key ? model[this.key] : model;\n  }\n}\n\nexport default Build;","/**\n * Created by chetanv on 08/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass ManyModelGenerator extends ModelGenerator {\n  constructor(factoryGirl, name, num, key = null, attrs = {}, buildOptions = {}) {\n    super(factoryGirl, name, key, attrs, buildOptions);\n\n    if (typeof num !== 'number' || num < 1) {\n      throw new Error('Invalid number of items requested.');\n    }\n\n    this.num = num;\n  }\n}\n\nexport default ManyModelGenerator;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ManyModelGenerator from './ManyModelGenerator';\n\nclass AssocMany extends ManyModelGenerator {\n  async generate() {\n    const models = await this.factoryGirl.createMany(this.name, this.num, this.attrs, this.buildOptions);\n    return this.key ? models.map(model => model[this.key]) : models;\n  }\n}\n\nexport default AssocMany;","/**\n * Created by chetanv on 08/06/16.\n */\n\n\nimport ManyModelGenerator from './ManyModelGenerator';\n\nclass AssocAttrsMany extends ManyModelGenerator {\n  async generate() {\n    const models = await this.factoryGirl.attrsMany(this.name, this.num, this.attrs, this.buildOptions);\n    return this.key ? models.map(model => model[this.key]) : models;\n  }\n}\n\nexport default AssocAttrsMany;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ManyModelGenerator from './ManyModelGenerator';\n\nclass BuildMany extends ManyModelGenerator {\n  async generate() {\n    const models = await this.factoryGirl.buildMany(this.name, this.num, this.attrs, this.buildOptions);\n    return this.key ? models.map(model => model[this.key]) : models;\n  }\n}\n\nexport default BuildMany;","/**\n * Created by chetanv on 08/06/16.\n */\n\nimport Generator from './Generator';\nimport Chance from 'chance';\nimport Debug from 'debug';\n\nconst debug = Debug('Chance');\nconst chance = new Chance();\n\nclass ChanceGenerator extends Generator {\n  method = null;\n  params = null;\n\n  constructor(factoryGirl, chanceMethod, options) {\n    super(factoryGirl);\n\n    if(typeof chance[chanceMethod] !== 'function') {\n      throw new Error('Invalid chance method requested');\n    }\n\n    this.method = chanceMethod;\n    this.params = options;\n  }\n\n  generate() {\n    return Promise.resolve(chance[this.method](this.params));\n  }\n}\n\nexport default ChanceGenerator;","/**\n * Created by chetanv on 01/06/16.\n */\n\nexport default function (factoryGirl, SomeGenerator) {\n  return function () {\n    const generator = new SomeGenerator(factoryGirl, ...arguments);\n    return function () {\n      return generator.generate();\n    }\n  }\n}","/**\n * Created by chetanv on 01/06/16.\n */\n\n\nclass DefaultAdapter {\n  build(Model, props) {\n    return Promise.resolve(new Model(props));\n  }\n\n  save(Model, model) {\n    return Promise.resolve(model.save()).then(function () {\n      return model;\n    });\n  }\n  \n  destroy(Model, model) {\n    return Promise.resolve(model.destroy()).then(function () {\n      return model;\n    });\n  }\n}\n\nexport default DefaultAdapter;\n","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport Factory from './Factory';\nimport Sequence from './generators/Sequence';\nimport Assoc from './generators/Assoc';\nimport AssocAttrs from './generators/AssocAttrs';\nimport Build from './generators/Build';\nimport AssocMany from './generators/AssocMany';\nimport AssocAttrsMany from './generators/AssocAttrsMany';\nimport BuildMany from './generators/BuildMany';\nimport ChanceGenerator from './generators/ChanceGenerator';\nimport attrGenerator from './generators/attrGenerator';\nimport DefaultAdapter from './adapters/DefaultAdapter';\nimport Debug from 'debug';\n\nconst debug = Debug('FactoryGirl');\n\nclass FactoryGirl {\n  factories = {};\n  options = {};\n  adapters = {};\n  created = new Set();\n\n  constructor(options) {\n    this.assoc = attrGenerator(this, Assoc);\n    this.assocMany = attrGenerator(this, AssocMany);\n    this.assocBuild = attrGenerator(this, Build);\n    this.assocBuildMany = attrGenerator(this, BuildMany);\n    this.assocAttrs = attrGenerator(this, AssocAttrs);\n    this.assocAttrsMany = attrGenerator(this, AssocAttrsMany);\n    this.seq = this.sequence = attrGenerator(this, Sequence);\n    this.chance = attrGenerator(this, ChanceGenerator);\n\n    this.defaultAdapter = new DefaultAdapter;\n    this.options = options;\n  }\n\n  define(name, Model, initializer, options) {\n    if (this.getFactory(name, false)) {\n      throw new Error(`factory ${name} already defined`)\n    }\n\n    this.factories[name] = new Factory(Model, initializer, options);\n  }\n\n  attrs(name, attrs, buildOptions) {\n    return this.getFactory(name).attrs(attrs, buildOptions);\n  }\n\n  build(name, attrs, buildOptions) {\n    const adapter = this.getAdapter(name);\n    return this.getFactory(name).build(adapter, attrs, buildOptions);\n  }\n\n  create(name, attrs, buildOptions) {\n    const adapter = this.getAdapter(name);\n    return this.getFactory(name).create(adapter, attrs, buildOptions).then((createdModel) => {\n      this.addToCreatedList(adapter, createdModel);\n      return createdModel;\n    });\n  }\n\n  attrsMany(name, num, attrs, buildOptions) {\n    return this.getFactory(name).attrsMany(num, attrs, buildOptions);\n  }\n\n  buildMany(name, num, attrs, buildOptions) {\n    const adapter = this.getAdapter(name);\n    return this.getFactory(name).buildMany(adapter, num, attrs, buildOptions);\n  }\n\n  createMany(name, num, attrs, buildOptions) {\n    const adapter = this.getAdapter(name);\n    return this.getFactory(name).createMany(adapter, num, attrs, buildOptions).then((createdModels) => {\n      this.addToCreatedList(adapter, createdModels);\n      return createdModels;\n    });\n  }\n\n  getFactory(name, throwError = true) {\n    if(!this.factories[name]) {\n      if(throwError) {\n        throw new Error('Invalid factory requested');\n      }\n    }\n    return this.factories[name];\n  }\n\n  withOptions(options, merge = false) {\n    this.options = merge ? {...this.options, ...options} : options;\n  }\n\n  getAdapter(factory) {\n    return factory ? (this.adapters[factory] || this.defaultAdapter) : this.defaultAdapter;\n  }\n\n  addToCreatedList(adapter, models) {\n    if(!Array.isArray(models)) {\n      models = [models];\n    }\n\n    for(let model of models) {\n      this.created.add([adapter, model]);\n    }\n  }\n\n  cleanUp() {\n    const promises = [];\n    for(let [adapter, model] of this.created) {\n      promises.push(adapter.destroy(model.constructor, model));\n    }\n    this.created.clear();\n    return Promise.all(promises);\n  }\n\n  setAdapter(adapter, factory) {\n    if (!factory) {\n      this.defaultAdapter = adapter;\n    } else {\n      this.adapters[factory] = adapter;\n    }\n  }\n}\n\nexport default FactoryGirl;","/**\n * Created by chetanv on 07/06/16.\n */\n\nimport FactoryGirl from './FactoryGirl';\n\nconst factory = new FactoryGirl();\n\nexport default factory;"],"names":["debug"],"mappings":"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"}