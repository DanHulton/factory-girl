{"version":3,"file":"index.umd.js","sources":["../src/utils/asyncPopulate.js","../src/Factory.js","../src/generators/Generator.js","../src/generators/Sequence.js","../src/generators/ModelGenerator.js","../src/generators/Assoc.js","../src/generators/Build.js","../src/generators/AssocMany.js","../src/generators/BuildMany.js","../src/generators/attrGenerator.js","../src/adapters/DefaultAdapter.js","../src/FactoryGirl.js","../src/index.js"],"sourcesContent":["/**\n * Created by chetanv on 07/06/16.\n */\n\nasync function asyncPopulate(target, source) {\n  Object.keys(source).forEach(async(attr) => {\n    if (Array.isArray(source[attr])) {\n      target[attr] = [];\n      await asyncPopulate(target[attr], source[attr]);\n    } else if (typeof source[attr] === 'object') {\n      target[attr] = target[attr] || {};\n      await asyncPopulate(target[attr], source[attr]);\n    } else if (typeof source[attr] === 'function') {\n      target[attr] = await Promise.resolve(source[attr]());\n    } else {\n      target[attr] = await Promise.resolve(source[attr]);\n    }\n  });\n\n  return target;\n}\n\nexport default asyncPopulate;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport asyncPopulate from './utils/asyncPopulate';\nimport Debug from 'debug';\n\nconst debug = Debug('Factory');\n\nclass Factory {\n  name = null;\n  Model = null;\n  initializer = null;\n  options = null;\n\n  constructor(Model, initializer, options = {}) {\n    if (!Model || typeof Model !== 'function') {\n      throw new Error('Invalid Model passed to the factory');\n    }\n\n    if (!initializer || (typeof initializer !== 'object' && typeof initializer !== 'function')) {\n      throw new Error('Invalid initializer passed to the factory');\n    }\n\n    this.Model = Model;\n    this.initializer = initializer;\n    this.options = options;\n  }\n\n  async getFactoryAttrs(buildOptions = {}) {\n    let attrs = {};\n    if (typeof this.initializer === 'function') {\n      attrs = await Promise.resolve(this.initializer(buildOptions));\n    } else {\n      attrs = {...this.initializer};\n    }\n\n    return attrs;\n  }\n\n  async attrs(attrs = {}, buildOptions = {}) {\n    const factoryAttrs = await this.getFactoryAttrs(buildOptions);\n    const modelAttrs = {};\n\n    await asyncPopulate(modelAttrs, factoryAttrs);\n    await asyncPopulate(modelAttrs, attrs);\n\n    return modelAttrs;\n  }\n\n  async build(adapter, attrs = {}, buildOptions = {}) {\n    const modelAttrs = await this.attrs(attrs, buildOptions);\n    return adapter.build(this.Model, modelAttrs);\n  }\n\n  async create(adapter, attrs = {}, buildOptions = {}) {\n    const model = await this.build(adapter, attrs, buildOptions);\n    return adapter.save(this.Model, model);\n  }\n\n  async attrsMany(num, attrsArray = [], buildOptionsArray = []) {\n\n    const models = [];\n    let attrObject = null;\n    let buildOptionsObject = null;\n\n    if (!Array.isArray(attrsArray) && typeof attrsArray === 'object') {\n      attrObject = attrsArray;\n      attrsArray = [];\n    }\n\n    if (!Array.isArray(buildOptionsArray) && typeof buildOptionsArray === 'object') {\n      buildOptionsObject = buildOptionsArray;\n      buildOptionsArray = [];\n    }\n\n    if (typeof num !== 'number' || num < 1) {\n      throw new Error('Invalid number of objects requested');\n    }\n\n    if (!Array.isArray(attrsArray)) {\n      throw new Error('Invalid attrsArray passed');\n    }\n\n    if (!Array.isArray(buildOptionsArray)) {\n      throw new Error('Invalid buildOptionsArray passed');\n    }\n\n    attrsArray.length = buildOptionsArray.length = num;\n    for (let i = 0; i < num; i++) {\n      models[i] = this.attrs(\n        attrObject || attrsArray[i] || {},\n        buildOptionsObject || buildOptionsArray[i] || {}\n      );\n    }\n\n    return Promise.all(models);\n  }\n\n  async buildMany(adapter, num, attrsArray = [], buildOptionsArray = []) {\n    const attrs = await this.attrsMany(num, attrsArray, buildOptionsArray);\n    const models = attrs.map((attr) => adapter.build(this.Model, attr));\n    return Promise.all(models);\n  }\n\n  async createMany(adapter, num, attrsArray = [], buildOptionsArray = []) {\n    const models = await this.buildMany(adapter, num, attrsArray, buildOptionsArray);\n    const savedModels = models.map((model) => adapter.save(this.Model, model));\n    return Promise.all(savedModels);\n  }\n}\n\nexport default Factory;","/**\n * Created by chetanv on 01/06/16.\n */\n\nclass Generator {\n  constructor(factoryGirl) {\n    if (!factoryGirl) {\n      throw new Error('No FactoryGirl instance passed.');\n    }\n    this.factoryGirl = factoryGirl;\n  }\n\n  generate() {\n    throw new Error('Override this method to generate a value');\n  }\n}\n\nexport default Generator;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport Generator from './Generator';\n\nclass Sequence extends Generator {\n  static sequences = {};\n  id = '';\n\n  constructor(factoryGirl, id, callback = null) {\n    super(factoryGirl);\n\n    if (typeof id !== 'string') {\n      throw new Error('Invalid sequence key passed');\n    }\n\n    this.id = id;\n\n    Sequence.sequences[id] = Sequence.sequences[id] || 1;\n    this.callback = callback;\n  }\n\n  async generate() {\n    const count = Sequence.sequences[this.id]++;\n    return this.callback ? this.callback(count) : count;\n  }\n}\n\nexport default Sequence;","/**\n * Created by chetanv on 06/06/16.\n */\n\nimport Generator from './Generator';\n\nclass ModelGenerator extends Generator {\n  constructor(factoryGirl, name, key = null, attrs = {}, buildOptions = {}) {\n    super(factoryGirl);\n\n    if (typeof name !== 'string' || name.length < 1) {\n      throw new Error('Invalid model name passed');\n    }\n\n    this.name = name;\n    this.key = key;\n    this.attrs = attrs;\n    this.buildOptions = buildOptions;\n  }\n}\n\nexport default ModelGenerator;\n","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass Assoc extends ModelGenerator {\n  async generate() {\n    const model = await this.factoryGirl.create(this.name, this.attrs, this.buildOptions);\n    return this.key ? model[this.key] : model;\n  }\n}\n\nexport default Assoc;\n","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass Build extends ModelGenerator {\n  async generate() {\n    const model = await this.factoryGirl.build(this.name, this.attrs, this.buildOptions);\n    return this.key ? model[this.key] : model;\n  }\n}\n\nexport default Build;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass AssocMany extends ModelGenerator {\n  constructor(factoryGirl, name, num, key = null, attrs = {}, buildOptions = {}) {\n    super(factoryGirl, name, key, attrs, buildOptions);\n\n    if (typeof num !== 'number' || num < 1) {\n      throw new Error('Invalid number of items requested.');\n    }\n\n    this.num = num;\n  }\n\n  async generate() {\n    const models = await this.factoryGirl.createMany(this.name, this.num, this.attrs, this.buildOptions);\n    return this.key ? models.map(model => model[this.key]) : models;\n  }\n}\n\nexport default AssocMany;","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport ModelGenerator from './ModelGenerator';\n\nclass BuildMany extends ModelGenerator {\n  constructor(factoryGirl, name, num, key = null, attrs = {}, buildOptions = {}) {\n    super(factoryGirl, name, key, attrs, buildOptions);\n\n    if (typeof num !== 'number' || num < 1) {\n      throw new Error('Invalid number of items requested.');\n    }\n\n    this.num = num;\n  }\n\n  async generate() {\n    const models = await this.factoryGirl.buildMany(this.name, this.num, this.attrs, this.buildOptions);\n    return this.key ? models.map(model => model[this.key]) : models;\n  }\n}\n\nexport default BuildMany;","/**\n * Created by chetanv on 01/06/16.\n */\n\nexport default function (factoryGirl, SomeGenerator) {\n  return function () {\n    const generator = new SomeGenerator(factoryGirl, ...arguments);\n    return async function () {\n      return generator.generate();\n    }\n  }\n}","/**\n * Created by chetanv on 01/06/16.\n */\n\n\nclass DefaultAdapter {\n  async build(Model, props) {\n    return new Model(props);\n  }\n\n  async save(Model, model) {\n    model.save();\n    return model;\n  }\n  \n  async destroy(Model, model) {\n    model.destroy();\n    return model;\n  }\n}\n\nexport default DefaultAdapter;\n","/**\n * Created by chetanv on 01/06/16.\n */\n\nimport Factory from './Factory';\nimport Sequence from './generators/Sequence';\nimport Assoc from './generators/Assoc';\nimport Build from './generators/Build';\nimport AssocMany from './generators/AssocMany';\nimport BuildMany from './generators/BuildMany';\nimport attrGenerator from './generators/attrGenerator';\nimport DefaultAdapter from './adapters/DefaultAdapter';\n\nclass FactoryGirl {\n  factories = {};\n  options = {};\n  adapters = {};\n\n  constructor(options) {\n    this.assoc = attrGenerator(this, Assoc);\n    this.assocMany = attrGenerator(this, AssocMany);\n    this.assocBuild = attrGenerator(this, Build);\n    this.assocBuildMany = attrGenerator(this, BuildMany);\n    this.sequence = attrGenerator(this, Sequence);\n\n    this.defaultAdapter = options.defaultAdapter || new DefaultAdapter;\n  }\n\n  define(name, Model, initializer, options) {\n    if (this.getFactory(name)) {\n      throw new Error(`factory ${name} already defined`)\n    }\n\n    this.factories[name] = new Factory(Model, initializer, options);\n  }\n\n  async attrs(name, attrs, buildOptions) {\n    return await this.getFactory(name).attrs(attrs, buildOptions);\n  }\n\n  async build(name, attrs, buildOptions) {\n    const adapter = this.adapters[name] || this.defaultAdapter;\n    return await this.getFactory(name).build(adapter, attrs, buildOptions);\n  }\n\n  async create(name, attrs, buildOptions) {\n    const adapter = this.adapters[name] || this.defaultAdapter;\n    return await this.getFactory(name).create(adapter, attrs, buildOptions);\n  }\n\n  async buildMany(name, num, attrs, buildOptions) {\n    const adapter = this.adapters[name] || this.defaultAdapter;\n    return await this.getFactory(name).buildMany(adapter, num, attrs, buildOptions);\n  }\n\n  async createMany(name, num, attrs, buildOptions) {\n    const adapter = this.adapters[name] || this.defaultAdapter;\n    return await this.getFactory(name).createMany(adapter, num, attrs, buildOptions);\n  }\n\n  getFactory(name) {\n    return this.factories[name];\n  }\n\n  withOptions(options, merge = false) {\n    this.options = merge ? {...this.options, ...options} : options;\n  }\n\n  setAdapter(adapter, factory) {\n    if (!factory) {\n      this.defaultAdapter = adapter;\n    } else {\n      this.adapters[factory] = adapter;\n    }\n  }\n}\n\nexport default FactoryGirl;","/**\n * Created by chetanv on 07/06/16.\n */\n\nimport FactoryGirl from './FactoryGirl';\n\nconst factory = new FactoryGirl();\n\nexport default factory;"],"names":[],"mappings":"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"}